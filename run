#!/bin/bash

# Save command
command="$0 $@"

# Parse arguments
pipeline="$1"
shift
while (( "$#" )); do
  # Split --option=parameter into two variables
  [[ "$1" == --*=* ]] && set -- "${1%%=*}" "${1#*=}" "${@:2}"
  case "$1" in
    # Parse output directory
    --output)
      if [[ -n "$2" && "$2" != -* ]]; then
        output="$2"
        shift
      fi
      shift
      ;;
    # Preserve other arguments
    *)
      args+=("$1")
      shift
      ;;
  esac
done

if [[ -z "$pipeline" || -z "$output" ]]; then
  echo "Usage: $0 <pipeline.nf> --output <directory> [pipeline arguments] [nextflow arguments]"
  exit 1
fi

set -- "${args[@]}"
args=()

# Prepare nextflow temp folder
mkdir -p "$output"/temp/input
ln -sfr "$output"/temp .nextflow
rm -rf "$output"/logs/nextflow.log

# Write command to history
mkdir -p "$output"/logs
[ -f "$output"/logs/history ] && echo "" >> "$output"/logs/history
echo $(date '+%Y/%m/%d %H:%M:%S')$'\t'$command >> "$output"/logs/history

# Parse pipeline arguments
while (( "$#" )); do
  case "$1" in
    # Parse options and parameters
    --?*)
      args+=("$1")
      params=""
      while [[ -n "$2" && "$2" != -* ]]; do
        if [[ -d "$2" || -f "$2" ]]; then
          # Replace paths with spaceless commaless symlinks for nextflow
          value=$(basename "$2")
          value="${value// /_}"
          value="${value//,/_}"
          value="$output"/temp/input/"$value"
          ln -sfr "$2" "$value"
        else
          value="$2"
        fi
        # Separate parameters with commas for nextflow
        params+="$value",
        shift
      done
      args+=("${params%,}")
      shift
      ;;
    # Preserve other arguments
    *)
      args+=("$1")
      shift
      ;;
  esac
done

# Run nextflow pipeline
# And remove temp folder once pipeline successfully completes
nextflow \
-log "$output"/logs/nextflow.log \
run "$pipeline" \
-work-dir "$output"/temp/work \
--output "$output" \
"${args[@]}" \
&& rm -rf .nextflow "$output"/temp
